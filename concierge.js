// Generated by CoffeeScript 1.8.0

/*
 * GABConcierge v0.0.1
 * 
 *
 * Author: Francois Lafortune aka: @AKRFranko
 * Author Email: franko@akr.club
 * Owner: GAB.
 */
var __slice = [].slice,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

(function(globalContext) {
  var Action, Concierge, DEFAULT_LANGUAGE, LIB_NAME, Link, MODULE_KEYWORDS, Menu, Module, Pure, SEMVER, SUPPORTED_LANGUAGES, UI, Visitor, dailyTimeRangeMap, domName, evented, getCurrentTimeRange, jQuery, persisted, pluggable, safeJSON, sortObjects, store;
  jQuery = globalContext.jQuery;
  Pure = globalContext.$p;
  LIB_NAME = "GABConcierge";
  SEMVER = "v0.0.1";
  MODULE_KEYWORDS = ['extended', 'included', 'module_type', 'module_name', 'instance_name', 'instance_type'];
  SUPPORTED_LANGUAGES = Object.keys(globalContext[LIB_NAME].i18n);
  DEFAULT_LANGUAGE = 'en';
  dailyTimeRangeMap = {
    morning_early: {
      start: moment().hours(6).minutes(0).seconds(0),
      end: moment().hours(8).minutes(59).seconds(0)
    },
    morning_late: {
      start: moment().hours(9).minutes(0).seconds(0),
      end: moment().hours(11).minutes(59).seconds(0)
    },
    afternoon_early: {
      start: moment().hours(12).minutes(0).seconds(0),
      end: moment().hours(14).minutes(59).seconds(0)
    },
    afternoon_late: {
      start: moment().hours(15).minutes(0).seconds(0),
      end: moment().hours(17).minutes(59).seconds(0)
    },
    evening_early: {
      start: moment().hours(18).minutes(0).seconds(0),
      end: moment().hours(20).minutes(59).seconds(0)
    },
    evening_late: {
      start: moment().hours(21).minutes(0).seconds(0),
      end: moment().hours(23).minutes(59).seconds(0)
    },
    night_early: {
      start: moment().hours(24).minutes(0).seconds(0),
      end: moment().hours(3).minutes(59).seconds(0)
    }
  };

  /*
   * Utilities
   */
  getCurrentTimeRange = function(map) {
    var name, names, now, range;
    if (map == null) {
      map = dailyTimeRangeMap;
    }
    now = moment();
    names = Object.keys;
    for (name in names) {
      range = map[name];
      if (now.isAfter(range.begins) && now.isBefore(range.ends)) {
        return name;
      }
    }
    return 'must_be_inside_the_tardis';
  };
  safeJSON = function(json) {
    return JSON.parse(JSON.stringify(json));
  };
  domName = function() {
    var names;
    names = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    names.unshift('gab');
    return names.filter(function(v) {
      return !!v;
    }).join('_').toLowerCase().replace(/[^\d\w-]/g, '');
  };
  sortObjects = function(attribute, direction) {
    var getattr;
    if (direction == null) {
      direction = 'desc';
    }
    if (typeof attribute === 'function') {
      getattr = attribute;
    } else {
      getattr = function() {
        return attribute;
      };
    }
    if (direction === 'asc') {
      return function(a, b) {
        return a[getattr.call(a)] - b[getattr.call(b)];
      };
    } else {
      return function(a, b) {
        return b[getattr.call(b)] - a[getattr.call(a)];
      };
    }
  };

  /*
   * Basil.js Data Store
   */
  store = new Basil({
    namespace: "GAB-" + SEMVER,
    storage: 'local',
    expireDays: 3650
  });

  /*
   * Headless Prototypes
   */

  /*
    Prototype: Custom Interface To Basil Store
    Include these to provide your Module with 
    browser-persisted storage.
   */
  persisted = {
    isPersisted: true,
    set: function(key, value) {
      return persisted.put.call(this, key, value);
    },
    getset: function(key, value) {
      return persisted.getput.call(this, key, value);
    },
    getall: function() {
      var localns;
      localns = new RegExp("^" + (domName(this.module_type, this.instance_name)) + "_");
      return store.keys().reduce(function(all, key) {
        var localkey;
        if (localns.test(key)) {
          localkey = key.replace(localns, '');
          all[localkey] = store.get(key);
        }
        return all;
      }, {});
    },
    getput: function(key, value) {
      var retval;
      key = domName(this.module_type, this.instance_name, key);
      retval = store.get(key);
      store.set(key, value);
      return retval;
    },
    getdel: function(key) {
      var retval;
      key = domName(this.module_type, this.instance_name, key);
      retval = store.get(key);
      store.remove(key);
      return retval;
    },
    put: function(key, value) {
      key = domName(this.module_type, this.instance_name, key);
      store.set(key, value);
      return value;
    },
    get: function(key) {
      key = domName(this.module_type, this.instance_name, key);
      return store.get(key);
    },
    del: function(key) {
      key = domName(this.module_type, this.instance_name, key);
      store.remove(key);
      return null;
    },
    incr: function(key) {
      var v;
      key = domName(this.module_type, this.instance_name, key);
      v = store.get(key);
      if (!v) {
        v = 0;
      }
      if (isNaN(v)) {
        throw new TypeError("" + key + " is not a number!");
      }
      store.set(key, ++v);
      return v;
    },
    decr: function(key) {
      var v;
      key = domName(this.module_type, this.instance_name, key);
      v = store.get(key);
      if (!v) {
        v = 0;
      }
      if (isNaN(v)) {
        throw new TypeError("" + key + " is not a number!");
      }
      store.set(key, --v);
      return v;
    }
  };

  /*
    Prototype: Proxied jQuery Event Methods
    Include these to provide your Module with 
    an evented system.
   */
  evented = {
    isEvented: true,
    on: function(eventName, handle) {
      var ns;
      ns = domName(this.module_type, this.instance_name);
      jQuery(document).on("" + eventName + "." + ns, handle);
      return this;
    },
    off: function(eventName, handle) {
      var ns;
      ns = domName(this.module_type, this.instance_name);
      jQuery(document).off("" + eventName + "." + ns, handle);
      return this;
    },
    one: function(eventName, handle) {
      var ns;
      ns = domName(this.module_type, this.instance_name);
      jQuery(document).one("" + eventName + "." + ns, handle);
      return this;
    },
    trigger: function(eventName, data) {
      var ns;
      ns = domName(this.module_type, this.instance_name);
      jQuery(document).trigger("" + eventName + "." + ns, data);
      return this;
    }
  };

  /*
    Prototype: jQuery Pluginize
    Include these to provide your Module with 
    a jQuery plugin interface.
   */
  pluggable = {
    isPluggable: true,
    included: function() {
      var bindPlugin, instance, runCommand;
      instance = this;
      runCommand = function(command, args) {
        return instance[command].apply(instance, args);
      };
      bindPlugin = function() {
        var data;
        data = this.data(instance.module_type);
        if (data !== instance) {
          this.data(instance.module_type, intance);
        }
        return this;
      };
      jQuery.fn[this.instance_name] = function() {
        var args, command;
        command = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
        return jQuery(this).each(function() {
          if (command && instance[command]) {
            runCommand(command, args);
          }
          return bindPlugin.call($(this));
        });
      };
      jQuery.fn[this.instance_name].constructor = instance.constructor;
      jQuery.fn[this.instance_name].prototype = instance.constructor.prototype;
      return instance.plugin = jQuery.fn[this.instance_name];
    }
  };

  /*
    Prototype: Rendering Provided By Ractive
    Include these to provide your Module with 
    a Ractive templating interface.
   */

  /* 
   *  Module Stuff for Prototypal Inheritance Fun.
   * 
   *  This is our basic internal meta-magic!
   */
  Module = (function() {
    function Module() {}

    Module.name_module = function(value) {
      var module_name, module_type;
      module_type = value.toLowerCase().split(':').reverse().join('_');
      module_name = value.toLowerCase().split(':').reverse().reduce(function(n, s) {
        return n + s[0].toUpperCase() + s.slice(1);
      }, '');
      this.module_name = module_name;
      this.prototype.module_name = module_name;
      this.module_type = module_type;
      this.prototype.module_type = module_type;
      return this;
    };

    Module.extend = function(obj) {
      var key, value, _ref;
      for (key in obj) {
        value = obj[key];
        if (__indexOf.call(MODULE_KEYWORDS, key) < 0) {
          this[key] = value;
        }
      }
      if ((_ref = obj.extended) != null) {
        _ref.apply(this);
      }
      return this;
    };

    Module.include = function(obj) {
      var key, value, _ref;
      for (key in obj) {
        value = obj[key];
        if (__indexOf.call(MODULE_KEYWORDS, key) < 0) {
          this.prototype[key] = value;
        }
      }
      if ((_ref = obj.included) != null) {
        _ref.apply(this);
      }
      return this;
    };

    return Module;

  })();

  /*
   *  Concierge Lib Wrapper
   *
   *  Eventually exported to the global context as a Singleton,
   *  this is pretty much just a huge constructor to wrap all initializations.
   *  
   *  This is our core library meta-magic!
   */
  Concierge = (function(_super) {
    __extends(Concierge, _super);

    Concierge.name_module('core:concierge');

    Concierge.include(persisted);


    /*
     * Anything that can or must run before the DOM is loaded can be handled here.
     */

    function Concierge(instance_name, json) {
      var menus, module_reference, name_reference, stringified, translatable_keys, ui;
      this.instance_name = instance_name;
      if (!this.instance_name) {
        throw new Error("Instance name required");
      }
      this.instance_type = "" + this.module_type + "_instance";
      if (this.module_name !== 'ConciergeCore') {
        return this;
      }

      /*
        Initialize "Visitor" instance
       */
      Concierge.visitor = new Visitor("concierge-visitor");
      Concierge.current_language_choice = Concierge.visitor.get('language_choice');

      /*
        Local accessors for "added speed"
       */
      Concierge.link = {};
      Concierge.action = {};
      Concierge.menu = {};
      name_reference = {
        menu: Object.keys(json.structure.menu),
        action: Object.keys(json.structure.action),
        link: Object.keys(json.structure.link)
      };
      module_reference = [['menu', Menu], ['action', Action], ['link', Link]];

      /*
        Sort main menu actions based on storage scores
       */
      json.structure.menu.main.actions.sort(function(a, b) {
        var aScore, bScore;
        aScore = Concierge.visitor.get("" + a + "_clicks") || 0;
        bScore = Concierge.visitor.get("" + b + "_clicks") || 0;
        return bScore - aScore;
      });

      /*
        Internationalize structure in a cascading fashion.
       */
      stringified = JSON.stringify(json.structure);
      translatable_keys = ['title', 'text', 'label', 'description', 'caption'];
      SUPPORTED_LANGUAGES.reduce(function(structures, lang) {
        i18n(json.i18n[lang]);
        structures[lang] = JSON.parse(stringified, function(key, value) {
          if (__indexOf.call(translatable_keys, key) < 0) {
            return value;
          }
          return i18n._(value);
        });
        return structures;
      }, Concierge.structures = {
        "default": json.structure
      });

      /*
        Set Current Time Range
       */
      Concierge.current_time_range = getCurrentTimeRange();

      /*
        Init SubClasses
       */
      module_reference.reduce(function(concierge, reference) {
        var module_constructor, module_type;
        module_type = reference[0], module_constructor = reference[1];
        name_reference[module_type].map(function(data_name) {
          json = SUPPORTED_LANGUAGES.reduce(function(json, lang) {
            json[lang] = Concierge.structures[lang][module_type][data_name];
            json[lang]["" + module_type + "_name"] = data_name;
            if (data_name === 'main') {
              json[lang].isMainMenu = true;
            }
            return json;
          }, {});
          return Concierge[module_type][data_name] = new module_constructor(data_name, json);
        });
        return concierge;
      }, Concierge);
      menus = Object.keys(Concierge.menu).map(function(name) {
        return Concierge.menu[name].toJSON();
      });
      ui = new Ractive({
        el: 'content',
        template: '{{#menus}}{{>menu_template}}{{/menus}}',
        data: {
          menus: menus
        },
        partials: {
          menu_template: jQuery('#menu_template').html(),
          action_partial: jQuery('#action_partial').html(),
          link_partial: jQuery('#link_partial').html()
        }
      });
      $('#main_menu').addClass('show');
      $(document).on('click', '.action.action-menu', function(event) {
        var target;
        event.preventDefault();
        target = $(this).data('target');
        $('.menu.show').removeClass('show');
        return $("#" + target + "_menu").addClass('show');
      });
      return this;
    }

    return Concierge;

  })(Module);

  /*
    Visitor Class
     * extends Concierge # extends Module
   */
  Visitor = (function(_super) {
    __extends(Visitor, _super);

    Visitor.name_module('visitor');

    Visitor.include(persisted);

    function Visitor(instance_name) {
      var browser_lang, current_time, lang, last_time, visitor;
      visitor = this;
      Visitor.__super__.constructor.call(this, instance_name);
      last_time = visitor.get('last_visit') || 0;
      current_time = new Date().getTime();
      visitor.put('last_window_refresh', current_time);
      visitor.put('time_since_last_visit', current_time - last_time);
      $(window).unload(function() {
        return visitor.put('last_visit', new Date().getTime());
      });
      lang = visitor.get('language_choice');
      browser_lang = navigator.language.replace(/-.+$/, '');
      if (!lang) {
        visitor.put('language_choice', __indexOf.call(SUPPORTED_LANGUAGES, browser_lang) >= 0 ? browser_lang : void 0);
      } else {
        DEFAULT_LANGUAGE;
      }
      return this;
    }

    return Visitor;

  })(Concierge);

  /*
    UI Class # extends Concierge # extends Module
    
    This is the user interface meta-magic!
    Use as an "includes" container for UI relevant classes to inherit
   */
  UI = (function(_super) {
    __extends(UI, _super);

    UI.name_module('core:ui:concierge');

    UI.include(evented);

    function UI(name, structuredData) {
      this.structuredData = structuredData != null ? structuredData : {};
      UI.__super__.constructor.call(this, name);
    }

    return UI;

  })(Concierge);

  /*
    Action Class # extends UI # extends Concierge # extends Module
    
    BaaAAAM! Action Time!
   */
  Action = (function(_super) {
    __extends(Action, _super);

    function Action() {
      return Action.__super__.constructor.apply(this, arguments);
    }

    Action.name_module('action');

    Action.include(pluggable);

    Action.prototype.toJSON = function() {
      var data;
      data = this.structuredData[Concierge.current_language_choice];
      if (data && data.links) {
        data.hasLinks = true;
        data.links = data.links.map(function(n) {
          var link;
          if (typeof n !== 'string') {
            return n;
          }
          link = Concierge.link[n];
          if (link.toJSON) {
            return link.toJSON();
          } else {
            return link;
          }
        });
      }
      return data;
    };

    return Action;

  })(UI);

  /*
    Menu Class # extends UI # extends Concierge # extends Module
    
    Would you like to see the menu?
   */
  Menu = (function(_super) {
    __extends(Menu, _super);

    function Menu() {
      return Menu.__super__.constructor.apply(this, arguments);
    }

    Menu.name_module('menu');

    Menu.include(pluggable);

    Menu.prototype.toJSON = function() {
      var data;
      data = this.structuredData[Concierge.current_language_choice];
      if (data && data.actions) {
        data.hasActions = true;
        data.actions = data.actions.map(function(n) {
          var action;
          if (typeof n !== 'string') {
            return n;
          }
          action = Concierge.action[n];
          if (action.toJSON) {
            return action.toJSON();
          } else {
            return action;
          }
        });
      }
      return data;
    };

    return Menu;

  })(UI);

  /*
    Link Class # extends UI # extends Concierge # extends Module
    
    I think it's at http://g-a-b.co!
   */
  Link = (function(_super) {
    __extends(Link, _super);

    function Link() {
      return Link.__super__.constructor.apply(this, arguments);
    }

    Link.name_module('menu');

    Link.include(pluggable);

    Link.prototype.toJSON = function() {
      var data;
      return data = this.structuredData[Concierge.current_language_choice];
    };

    return Link;

  })(UI);

  /* Export Concierge to Saint-Gleton (lol, i meant globalContext) */
  $('#content').empty();
  globalContext[LIB_NAME] = new Concierge("gab-concierge-" + SEMVER, globalContext[LIB_NAME]);
  $('.navigation').on('click', function() {
    return $(this).toggleClass('open');
  });
  return $('.search').on('click', function() {
    return $(this).toggleClass('huge').find('input').focus();
  });
})(this);
